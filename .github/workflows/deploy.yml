name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > project.pem
          chmod 600 project.pem
          ls -lah project.pem  # 🔥 Key 파일이 정상적으로 생성되었는지 확인

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i project.pem ubuntu@ec2-${{ secrets.AWS_EC2_HOST }}.ap-northeast-2.compute.amazonaws.com "echo '✅ SSH 연결 성공!'"

      - name: Create .env file on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i project.pem ubuntu@ec2-${{ secrets.AWS_EC2_HOST }}.ap-northeast-2.compute.amazonaws.com << 'EOF'
            cd ~/app

            echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" > .env
            echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
            echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
            echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
            echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "ORIGIN=${{ secrets.ORIGIN }}" >> .env

            echo "✅ .env file created in ~/app/.env"
            cat .env
          EOF

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i project.pem ubuntu@ec2-${{ secrets.AWS_EC2_HOST }}.ap-northeast-2.compute.amazonaws.com << 'EOF'
            cd ~/app
            git pull origin main
            docker-compose down
            docker-compose up -d --build
            echo "✅ Deployment complete!"
          EOF

      - name: Clean up SSH Key
        run: rm -f private_key.pem
